#include <esp_now.h>
#include <WiFi.h>
#define PIN 33
#define NUMPIXELS 12
#define LED_COUNT 12
#include <Adafruit_NeoPixel.h>
Adafruit_NeoPixel pixels(NUMPIXELS, PIN, NEO_GRB + NEO_KHZ800);
// Define a data structure
typedef struct struct_message {
  int value;
  int R;
  int G;
  int B;
  int brightness;
} struct_message;
// Create a structured object
struct_message myData;
// Callback function executed when data is received
void OnDataRecv(const uint8_t * mac, const uint8_t *incomingData, int len) {
  memcpy(&myData, incomingData, sizeof(myData));
  Serial.print("Data received: ");
  Serial.println(len);
  Serial.print("Value Value: ");
  Serial.println(myData.value);
  Serial.print("R Value: ");
  Serial.println(myData.R);
  Serial.print("G Value: ");
  Serial.println(myData.G);
  Serial.print("B Value: ");
  Serial.println(myData.B);
  Serial.print("Brightness Value: ");
  Serial.println(myData.brightness);
  // Serial.println();
}
void setup() {
  // Set up Serial Monitor
  Serial.begin(115200);
  // Set ESP32 as a Wi-Fi Station
  WiFi.mode(WIFI_STA);
  // Initilize ESP-NOW
  if (esp_now_init() != ESP_OK) {
    Serial.println("Error initializing ESP-NOW");
    return;
  }
  // Register callback function
  esp_now_register_recv_cb(OnDataRecv);
}
void loop() {
  Serial.println(myData.value);
  if (myData.value == 1){
    pixels.clear();
    for(int i = 0; i < LED_COUNT; i++) {
      pixels.setPixelColor(i, pixels.Color(myData.R, myData.G, myData.B));
    }
    pixels.show();
  }
  else
  {
    pixels.clear();
    pixels.show();
  }
}



//pair boards, esp now user guide
//is the terminal printing
